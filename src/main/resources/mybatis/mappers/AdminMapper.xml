<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.nc.mapper.AdminMapper">

	<!-- 
		void insertAccommodation(Accommodation accommodation)
		숙소 데이터 저장
	 -->
	<insert id="insertAccommodation" parameterType="Accommodation">
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			select acco_seq.nextval 
			from dual
		</selectKey>
		insert into accommodations
			(acco_id, acco_name, acco_district, acco_address, acco_latitude, acco_longitude,
			 acco_thumbnail_image, city_id, acco_introduce_comment, acco_detail_description)
		values
			(#{id}, #{name}, #{district}, #{address}, #{latitude}, #{longitude},
			 #{thumbnailImageName}, #{cityId}, #{introduceComment}, #{detailDescription})
	</insert>
	
	<!-- 
		void insertAccommodationTypes(AccoTypeRegisterForm accoTypeRegisterForm);
		숙소 타입 저장
	 -->
	<insert id="insertAccommodationTypes" parameterType="AccoTypeRegisterForm">
		insert into acco_types
			(acco_id, acco_type_id)
		values
			(#{id}, #{typeId})
	</insert>	
	
	<!-- 
		void insertAccommodationTags(AccoTagRegisterForm accoTagRegisterForm);
		숙소 태그 저장
	 -->
	<insert id="insertAccommodationTags" parameterType="AccoTagRegisterForm">
		insert into acco_tags
			(acco_id, acco_tag)
		values
			(#{id}, #{tag})
	</insert>	
	
	<!-- 
		void insertAccommodationCommonFacilities(AccoCommonFacilityRegisterForm accoCommonFacilityRegisterForm);
		숙소 공용시설 저장
	 -->
	<insert id="insertAccommodationCommonFacilities" parameterType="AccoCommonFacilityRegisterForm">
		insert into acco_common_facilities
			(acco_id, co_facility_id)
		values
			(#{id}, #{commonFacility})
	</insert>
		
	<!-- 
		void insertAccommodationDetailImages(AccoDetailImageNamesRegisterForm accoDetailImageNamesRegisterForm);
		숙소 상세이미지 저장
	 -->
	<insert id="insertAccommodationDetailImages" parameterType="AccoDetailImageNamesRegisterForm">
		insert into acco_detail_images
			(acco_id, image_file_name)
		values
			(#{id}, #{detailImageName})
	</insert>
	
	<!-- 
		void insertAccoRooms(AccommodationRoom accommodationRoom);
		숙소 객실별 저장
	 -->
	<insert id="insertAccoRooms" parameterType="AccommodationRoom">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select room_seq.nextval 
			from dual
		</selectKey>
		insert into acco_rooms
			(room_no, room_name, room_numbers, room_capacity,
			 room_day_price, room_description, acco_id, room_thumbnail_image)
		values
			(#{no}, #{name}, #{numbers}, #{capacity},
			 #{dayPrice}, #{description}, #{accoId}, #{thumbnailImageName})
	</insert>
	
	<!-- 
		void insertAccoRoomFacilities(AccoRoomFacilitiesRegisterForm accoRoomFacilitiesRegisterForm);
		객실별 시설 저장
	 -->
	<insert id="insertAccoRoomFacilities" parameterType="AccoRoomFacilitiesRegisterForm">
		insert into acco_room_facilities
			(room_no, ro_facility_id)
		values
			(#{no}, #{roomFacilities})
	</insert>
	
	<!-- 
		void insertAccoRoomDetailImages(AccoRoomDetailImageNamesRegisterForm accoRoomDetailImageNamesRegisterForm);
		객실 상세 이미지 저장
	 -->
	<insert id="insertAccoRoomDetailImages" parameterType="AccoRoomDetailImageNamesRegisterForm">
		insert into acco_room_detail_images
			(room_no, room_image_file_name)
		values
			(#{no}, #{detailImageName})
	</insert>
	
	<!-- 
		void insertRestaurant(Restaurant restaurant);
		음식점 정보 저장
	 -->
	<insert id="insertRestaurant" parameterType="Restaurant">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select restaurant_seq.nextval 
			from dual
		</selectKey>
		insert into restaurant
			(restaurant_no, restaurant_name, restaurant_location, restaurant_imgname, restaurant_tel, restaurant_latitud,
			 restaurant_longitude, city_id, restaurant_opening, restaurant_break_time, restaurant_close, restaurant_district)
		values
			(#{no}, #{name}, #{location}, #{imgname}, #{tel}, #{latitud},
			 #{longitude}, #{cityId}, #{opening}, #{breakTime}, #{close}, #{district})
	</insert>

	<!-- 
		void insertRestaurantTags(RestaurantTag restaurantTag);
		음식점 태그 정보 저장
	 -->
	<insert id="insertRestaurantTags" parameterType="RestaurantTag">
		insert into restaurant_tag
			(restaurant_no, restaurant_tag)
		values
			(#{restaurantNo}, #{tag})
	</insert>
	 
	 <!-- 
		void insertRestaurantMenus(RestaurantMenuRegisterForm restaurantMenuRegisterForm);
		음식점 메뉴 정보 저장
	 -->
	<insert id="insertRestaurantMenus" parameterType="RestaurantMenuRegisterForm">
		insert into restaurant_menu
			(restaurant_no, restaurant_menu_name, restaurant_price)
		values
			(#{no}, #{menuName}, #{price})
	</insert>
	 
	 <!-- 
		void insertRestaurantCategories(RestaurantCategoryRegisterForm restaurantCategoryRegisterForm);
		음식점 카테고리 정보 저장
	 -->
	<insert id="insertRestaurantCategories" parameterType="RestaurantCategoryRegisterForm">
		insert into restaurant_cat
			(restaurant_no, restaurant_cat_id)
		values
			(#{no}, #{category})
	</insert>
	 
	 <!-- 
		문의게시판 답글 저장
		void insertQaAnswer(int qaNo, String content);
	 -->
	<insert id="insertQaAnswer" parameterType="QaAnswer">
		<selectKey keyProperty="answerNo" resultType="int" order="BEFORE">
			select qa_answer_seq.nextval 
			from dual
		</selectKey>
		insert into qa_answer
			(qa_no, qa_answer_no, qa_content)
		values
			(#{qaNo}, #{answerNo}, #{content})
	</insert>
	
	<!-- 
		List<Accommodation> getSearchAccommodations(String keyword);
		키워드로 숙소를 검색(숙소명, 지역(시/군/구), 주소로 검색)
	 -->
	<select id="getSearchAccommodations" parameterType="string" resultType="Accommodation">
		select acco_id as id, acco_name as name, acco_district as district, 
			   acco_address as address, acco_latitude as latitude, acco_longitude as longitude,
			   acco_thumbnail_image as thumbnailImageName, acco_deleted as deleted, 
			   city_id as cityId, acco_introduce_comment as introduceComment,
			   acco_detail_description as detailDescription
		from accommodations
		where acco_deleted = 'N'
		and acco_name like '%' || #{value} || '%'
		or acco_district like '%' || #{value} || '%'
		or acco_address like '%' || #{value} || '%'
	</select>

	<!-- 
		키워드로 레스토랑 정보 검색
		List<Restaurant> getSearchRestaurant(String keyword);
	 -->
	<select id="getSearchRestaurant" parameterType="string" resultType="Restaurant">
		select restaurant_no as no, restaurant_name as name, restaurant_location as location,
			   restaurant_imgname as imgname, restaurant_tel as tel, restaurant_latitud as latitud,
			   restaurant_longitude as longitude, restaurant_delete as deleted, city_id as cityid,
			   restaurant_opening as opening, restaurant_break_time as breaktime, restaurant_close as close,
			   restaurant_district as district
		from restaurant
		where restaurant_delete = 'N'
		and restaurant_no like '%' || #{value} || '%'
		or restaurant_name like '%' || #{value} || '%'
		or restaurant_district like '%' || #{value} || '%'
		or restaurant_location like '%' || #{value} || '%'
	</select>
	
	<!-- 
		List<Accommodation> getSearchAccommodationById(int id);
		숙소아이디로 숙소 정보 검색
	 -->
	<select id="getSearchAccommodationById" parameterType="int" resultType="Accommodation">
		select acco_id as id, acco_name as name, acco_district as district, acco_address as address,
			   acco_latitude as latitude, acco_longitude as longitude,
			   acco_thumbnail_image as thumbnailImageName, acco_deleted as deleted, 
			   city_id as cityId, acco_introduce_comment as introduceComment,
			   acco_detail_description as detailDescription
		from accommodations
		where acco_id = #{value}
	</select>
	<!-- 
		List<Accommodation> getAccommodationCommonFacilitiesById(int id);
		숙소아이디로 숙소 공용시설 정보 검색
	 -->
	<select id="getAccommodationCommonFacilitiesById" parameterType="int" resultType="string">
		select co_facility_id as commonFacility
		from acco_common_facilities
		where acco_id = #{value}
	</select>
	<!-- 
		List<Accommodation> getAccommodationImagesById(int id);
		숙소아이디로 숙소 상세이미지 정보 검색
	 -->
	<select id="getAccommodationImagesById" parameterType="int" resultType="string">
		select image_file_name as image
		from acco_detail_images
		where acco_id = #{value}
	</select>
	<!-- 
		List<Accommodation> getAccommodationTagsById(int id);
		숙소아이디로 숙소 태그 정보 검색
	 -->
	<select id="getAccommodationTagsById" parameterType="int" resultType="string">
		select acco_tag as tag
		from acco_tags
		where acco_id = #{value}
	</select>
	<!-- 
		List<Accommodation> getAccommodationTypesById(int id);
		숙소아이디로 숙소 타입 정보 검색
	 -->
	<select id="getAccommodationTypesById" parameterType="int" resultType="string">
		select acco_type_id as type
		from acco_types
		where acco_id = #{value}
	</select>
	
	<!-- 
		List<Accommodation> getAccommodationRoomByaccoId(int id);
		숙소아이디로 객실 검색
	 -->
	<select id="getAccommodationRoomByaccoId" parameterType="int" resultType="AccommodationRoom">
		select acco_id as accoId, room_no as no, room_name as name, room_numbers as numbers,
			   room_capacity as capacity, room_day_price as dayPrice,
			   room_description as description, room_thumbnail_image as thumbnailImageName
		from acco_rooms
		where acco_id = #{value}
	</select>
	<!-- 
		List<AccommodationRoom> getAccommodationRoomByroomNo(int no);
		객실번호로 객실 검색
	 -->
 	<select id="getAccommodationRoomByroomNo" parameterType="int" resultType="AccommodationRoom">
	select acco_id as accoId, room_no as no, room_name as name, room_numbers as numbers,
		   room_capacity as capacity, room_day_price as dayPrice,
		   room_thumbnail_image as thumbnailImageName, room_description as description
	from acco_rooms
	where room_no = #{value}
	</select>
	<!-- 
		List<Accommodation> getAccommodationRoomFacilitiesByroomNo(int id);
		객실번호로 객실 시설 검색
	 -->
	<select id="getAccommodationRoomFacilitiesByroomNo" parameterType="int" resultType="string">
		select ro_facility_id as roomFacility
		from acco_room_facilities
		where room_no = #{value}
	</select>
	<!-- 
		List<AccommodationRoom> getAccommodationRoomImagesByroomNo(int id);
		객실번호로 객실 상세이미지 검색
	 -->
	<select id="getAccommodationRoomImagesByroomNo" parameterType="int" resultType="string">
		select room_image_file_name as image
		from acco_room_detail_images
		where room_no = #{value}
	</select>	
	
	<!-- 
		List<CommonFacilitiesDTO> getCheckedFacilities(int id);
		체크된 공용시설 정보 확인
	 -->
	<select id="getCheckedFacilities" parameterType="int" resultType="kr.co.nc.dto.CommonFacilitiesDTO">
		select cf.co_facility_id as id, cf.co_facility_name as name, nvl2(acf.co_facility_id, 'y', 'n') checked
		from common_facilities cf, acco_common_facilities acf
		where cf.co_facility_id(+) = acf.co_facility_id
		and acf.acco_id = #{value}
	</select>
  
	<!-- 
		List<CommonFacility> getCommonFacilitiesByAccommodationTypes(CommonFacility commonFacility);
		타입아이디로 공용시설 정보 검색
	 -->
	<select id="getCommonFacilitiesByAccommodationTypes" parameterType="java.util.List" resultType="CommonFacility">
		select co_facility_id as id, co_facility_name as name, co_facility_icon_name as iconName
		from common_facilities
		where co_facility_id in (select co_facility_id 
								 from acco_type_cofa 
								 <where>
									 acco_type_id in
								 <foreach collection="types" item="type" open="(" close=")" separator=",">
								 <if test="types != null">
								 		#{type}
							     </if>
							     </foreach>
								 )
							     </where>
	</select>
	<!-- 
		음식점 번호로 음식점 검색
		Restaurant getSearchRestaurantByNo(int no);
	 -->
	<select id="getSearchRestaurantByNo" parameterType="int" resultType="Restaurant">
		select restaurant_no as no, restaurant_name as name, restaurant_location as location,
			   restaurant_imgname as imgname, restaurant_tel as tel, restaurant_latitud as latitud,
			   restaurant_longitude as longitude, restaurant_delete as deleted, city_id as cityid,
			   restaurant_opening as opening, restaurant_break_time as breaktime, restaurant_close as close,
			   restaurant_district as district
		from restaurant
		where restaurant_no = #{value}
	</select>
	<!-- 
		음식점 번호로 음식점 카테고리 검색
		List<RestaurantCategoryModifyForm> getSearchRestaurantCategoriesByNo(int no);
	 -->
	<select id="getSearchRestaurantCategoriesByNo" parameterType="int" resultType="RestaurantCategoryModifyForm">
		select restaurant_no as restaurantNo, restaurant_cat_id as category
		from restaurant_cat
		where restaurant_no = #{value}
	</select>
	<!-- 
		음식점 번호로 음식점 태그 검색
		List<RestaurantTag> getSearchRestaurantTagsByNo(int no);
	 -->
	<select id="getSearchRestaurantTagsByNo" parameterType="int" resultType="RestaurantTag">
		select restaurant_no as restaurantNo, restaurant_tag as tag
		from restaurant_tag
		where restaurant_no = #{value}
	</select>
	<!-- 
		음식점 번호로 음식점 메뉴 검색
		public List<RestaurantMenu> getSearchRestaurantmenusByNo(int no);
	 -->
	<select id="getSearchRestaurantMenusByNo" parameterType="int" resultType="RestaurantMenu">
		select restaurant_no as restaurantNo, restaurant_menu_name as menuName, restaurant_price as price
		from restaurant_menu
		where restaurant_no = #{value}
	</select>
	<!-- 
		입실예정 예약 현황 검색
		List<ReservationDto> getReservationList();
	 -->
	<select id="getReservationList" resultType="kr.co.nc.dto.ReservationDto">
		select r.reservation_id as reservationId, r.reservation_check_in as checkIn,
			   r.user_no as userNo, r.room_no as roomNo, r.acco_id as accoId, r.reservation_name as reservationName,
    		   r.reservation_tel as reservationTel, a.acco_name as accoName, u.user_name as userName
		from reservation r, accommodations a, users u, payment p
		where r.acco_id = a.acco_id
		and r.user_no = u.user_no
        and r.reservation_id = p.reservation_id
        and p.payment_status like '%' || '예약완료' || '%'
		and r.reservation_check_in &gt;= TO_CHAR(sysdate, 'YY/MM/DD')
		order by r.reservation_check_in asc
	</select>
	<!-- 
		미답변 Q&A 검색
		List<QaDto> getQAListByAnswerStatus();
	 -->
	<select id="getQAListByAnswerStatus" resultType="kr.co.nc.dto.QaDto">
		select q.qa_no as no, q.user_no as userNo, q.qa_content as content,
			   q.qa_title as title, q.qa_created_date as createdDate, q.qa_image as image,
			   q.qa_answer_status as answerStatus, u.user_nickname as userNickName,
			   u.user_name as userName
		from qa q, users u
		where q.user_no = u.user_no
		and q.qa_answer_status = 'N'
		order by q.qa_created_date asc
	</select>

	<!--  
		주간 매출 차트를 위한 데이터 검색
		List<WeeklySalesDataForm> getWeeklyChartData();
	 -->
	<select id="getWeeklyChartData" resultType="kr.co.nc.web.form.WeeklySalesDataForm">
		with dates as
		(select to_char(sysdate - (level-1), 'dd') day
		 from dual
		 connect by level  &lt;= 7)
		select Y.day as salesDate , nvl(X.price, 0) as salesprice
		from (select to_char(r.reservation_check_in, 'DD') dd, SUM(P.PAYMENT_TOTAL_PRICE) price
		      from reservation r, payment p
		      where r.reservation_id = p.reservation_id
		      and to_char(r.reservation_check_in,'yy/mm/DD') between sysdate - interval '7' day and sysdate
		      group by to_char(r.reservation_check_in, 'DD')) X, dates Y
		where X.dd(+) = Y.day
		order by Y.day asc
	</select>
	<!--  
		월간 매출 차트를 위한 데이터 검색
		List<MonthlySalesDataForm> getMonthlyChartData();
	 -->
	<select id="getMonthlyChartData" resultType="kr.co.nc.web.form.MonthlySalesDataForm">
		with dates as
		(select to_char(sysdate - (level-1), 'mm/dd') day
		 from dual
		 connect by level &lt;= 30)
		select Y.day as salesDate , nvl(X.price, 0) as salesprice
		from (select to_char(r.reservation_check_in, 'mm/dd') dd, SUM(p.payment_total_price) price
			  from reservation r, payment p
			  where r.reservation_id = p.reservation_id
			  and to_char(r.reservation_check_in,'yy/mm/dd') between sysdate - interval '30' day and sysdate
			  group by to_char(r.reservation_check_in, 'mm/dd')) X, dates Y
		where X.dd(+) = Y.day
		order by Y.day asc
	</select>
	<!--  
		연간 매출 차트를 위한 데이터 검색
		List<YearlySalesDataForm> getYearlyChartData();
	 -->
	<select id="getYearlyChartData" resultType="kr.co.nc.web.form.YearlySalesDataForm">
		with months as
		(select to_char(add_months(sysdate, - (level-1)), 'yy/mm') month
		 from dual
		 connect by level  &lt;= 12)
		select Y.month as salesMonth , nvl(X.price, 0) as salesprice
		from (select to_char(r.reservation_check_in, 'yy/mm') dd, SUM(P.PAYMENT_TOTAL_PRICE) price
			  from reservation r, payment p
			  where r.reservation_id = p.reservation_id
			  and to_char(r.reservation_check_in,'yy/mm/DD') between add_months(sysdate,-12) and sysdate
			  group by to_char(r.reservation_check_in, 'yy/mm')) X, months Y
		where X.dd(+) = Y.month
		order by Y.month asc
	</select>
	
	<!-- 
		void updateAccommodation(Accommodation accommodation);
		숙소 정보 수정
	 -->
	<update id="updateAccommodation" parameterType="Accommodation">
		update
			accommodations
		set
		    acco_name = #{name},
			acco_district = #{district},
			acco_address = #{address},
			acco_latitude = #{latitude},
			acco_longitude = #{longitude},
		<if test='thumbnailImageName != null'>
			acco_thumbnail_image = #{thumbnailImageName},			
		</if>
			acco_updated_date = sysdate,
			city_id = #{cityId},
			acco_introduce_comment = #{introduceComment},
			acco_detail_description = #{detailDescription}
		where
			acco_id = #{id}
	</update>
	<!--  
		void updateAccoRoom(AccommodationRoom accommodationRoom);
		객실 정보 수정
	 -->
	<update id="updateAccoRoom" parameterType="AccommodationRoom">
		update
			acco_rooms
		set
			room_name = #{name},
			room_numbers = #{numbers},
			room_capacity = #{capacity},
			room_day_price = #{dayPrice},
			<if test='thumbnailImageName != null'>
				room_thumbnail_image = #{thumbnailImageName},
			</if>
			room_description = #{description}
		where
			room_no = #{no}
	</update>
	
	<!-- 
		void updateRestaurant(Restaurant restaurant);
		음식점 수정
	 -->
	<update id="updateRestaurant" parameterType="Restaurant">
		update
			restaurant
		set
		    restaurant_name = #{name},
			restaurant_location = #{location},
		<if test='imgname != null'>
			restaurant_imgname = #{imgname},			
		</if>
			restaurant_tel = #{tel},
			restaurant_latitud = #{latitud},
			restaurant_longitude = #{longitude},
			city_id = #{cityId},
			restaurant_opening = #{opening},
			restaurant_break_time = #{breakTime},
			restaurant_close = #{close},
			restaurant_district = #{district}
		where
			restaurant_no = #{no}
	</update>
	
	<!-- 
		void updateQaAnswerChecked(Qa qa);
		답변한 Qa 수정용
	 -->
	<update id="updateQa" parameterType="int">
		update
			QA
		set
		    qa_answer_status = 'Y'
		where
			qa_no = #{value}
	</update>
	
	<!-- 
		사용자 ID로 검색하여 PAYMENT_STATUS 값 '예약취소'로 수정
		void deleteReservationByAdmin(String reservationId);
	 -->
	<update id="deleteReservationByAdmin" parameterType="Payment">
		update
			payment
		set
		    payment_status = '예약취소'
		where
			reservation_id = #{reservationNo}
	</update>

	<!--  
		void deleteAccommodationDetailImages(AccommodationDeleteImageNameForm accommodationDeleteImageNameForm);
		숙소 상세이미지 삭제
	 -->
	<delete id="deleteAccommodationDetailImages" parameterType="AccommodationDeleteImageNameForm">
		delete
			acco_detail_images
		where
			image_file_name = #{deleteImgName}
	</delete>
	<!--  
		void deleteAccommodationTags(AccommodationDeleteTagForm accommodationDeleteTagForm);
		숙소 태그 삭제
	 -->
	<delete id="deleteAccommodationTags" parameterType="AccommodationDeleteTagForm">
		delete
			acco_tags
		where
            acco_id = #{id}
        and
			acco_tag = #{deleteTag}
	</delete>
	<!--  
		void deleteCommonFacilitiesById(AccommodationDeleteCommonFacilitiesForm accommodationDeleteCommonFacilitiesForm);
		숙소 공용시설정보 삭제
	 -->
	<delete id="deleteCommonFacilitiesById" parameterType="int">
		delete
			acco_common_facilities
		where
            acco_id = #{value}
	</delete>
	<!--  
		void deleteAccommodationTypes(int id);
		숙소 숙소타입 삭제
	 -->
	<delete id="deleteAccommodationTypes" parameterType="int">
		delete
			acco_types
		where
            acco_id = #{value}
	</delete>
	<!-- 
		객실 시설 삭제
		void deleteRoomCommonFacilitiesById(int id);
	 -->
 	<delete id="deleteRoomCommonFacilitiesById" parameterType="int">
		delete
			acco_room_facilities
		where
            room_no = #{value}
	</delete>
	<!--  
		void deleteAccommodationRoomDetailImages(AccommodationRoomDeleteImageNameForm accommodationRoomDeleteImageNameForm);
		숙소 메인 이미지 삭제
	 -->
	<delete id="deleteAccommodationRoomDetailImages" parameterType="AccommodationRoomDeleteImageNameForm">
		delete
			acco_room_detail_images
		where
			room_no = #{no}
		and
			room_image_file_name = #{deleteRoomDetailImgNames}
	</delete>
	<!--  
		void deleteRestaurantTags(RestaurantDeleteTagForm restaurantDeleteTagForm);
		음식점 태그 삭제
	 -->
	<delete id="deleteRestaurantTags" parameterType="RestaurantDeleteTagForm">
		delete
			restaurant_tag
		where
            restaurant_no = #{no}
        and
			restaurant_tag = #{deleteTag}
	</delete>
	<!--  
		void deleteRestaurantMenus(RestaurantDeleteMenuForm restaurantDeleteMenuForm);
		음식점 태그 삭제
	 -->
	<delete id="deleteRestaurantMenus" parameterType="RestaurantDeleteMenuForm">
		delete
			restaurant_menu
		where
            restaurant_no = #{no}
        and
			restaurant_menu_name = #{deletMenuName}
		and
			restaurant_price = #{deleteMenuPrice}
	</delete>

</mapper>